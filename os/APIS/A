--vars
local wh = {term.getSize()}
local w,h = term.getSize()
local pass = "kyle" -- admin pass to get to backbones
local ver = nil
local code = "1010"--checks for update
--------
function cls()
  term.clear()
end
function clsL()
  term.clearLine()
end
function pos(x,y)
 term.setCursorPos(x,y)
end
function bc(c)
  term.setBackgroundColor(c)
end
function tc(c)
  term.setTextColor(c)
end
function wirte(w)
  term.write(w)
end
--print right/left/centered
function setColor(b,t)
	bc(b)
	tc(t)
end
function pRight(y,str,bc,tc)
	setColor(bc,tc)
	pos(wh[1]-#str+1,y)
	write(str)
end
function pCentered(y,str,bc,tc)
	setColor(bc,tc)
	term.setCursorPos(wh[1]/2-#str/2,y)
	write(str)
end
function pHere(x,y,str,bc,tc)
	setColor(bc,tc)
	term.setCursorPos(x,y)
	term.write(str)
end
--prints Time
function Time(x,y,bc,tc)
	local mTime = true
	local tTime = textutils.formatTime(os.time(),mTime)
	pRight(y,tTime,bc,tc)
end
--
function dPI(x,y)
	pos(x,y)
	write(" ")
end
function getT(src)
	  local file = fs.open(src,"r")
	  local data = file.readAll() 
	  file.close()
	  local conf = textutils.unserialize(data)
	  return conf
end
local tColorLookup = {}
for n=1,16 do
	tColorLookup[ string.byte("0123456789abcdef",n,n)] = 2^(n-1)
end	
function loadImage(p)
	if type(p)~="string" then
		error("Expected path",2)
	end
	local tImage = {}
	if fs.exists(p) then
		local file = io.open(p,"r")
		local sLine = file:read()
		while sLine do
			local tLine = {}
			for x=1,sLine:len() do
				tLine[x] = tColorLookup[ string.byte(sLine,x,x)] or 0
			end
			table.insert(tImage,tLine)
			sLine = file:read()
		end
		file:close()
		return tImage
	end
	return nil
end
function drawPixel(x,y,c)
	if type(x)~="number" or type(y)~="number" or (c~=nil and type(c)~="number") then
		error("Expected x, y, color",2)
	end
	if c then
		bc(c)
	end
	dPI(x,y)
end
function drawLine(x1,y1,x2,y2,c)
	if type(x1)~="number" or type(y1)~="number" or
	   type(x2)~="number" or type(y2)~="number" or
	   (c~=nil and type(c)~="number") then
	   error("Expected startX, startY, endX, endY, Color")
	end
	x1 = math.floor(x1)
	y1 = math.floor(y1)
	x2 = math.floor(x2)
	y2 = math.floor(y2)
	if c then
		bc(c)
	end
	if x1==x2 and y1==y2 then
		dPI(x1,y1)
		return
	end
	local minX = math.min(x1,x2)
	if minX==x1 then
		minY = y1
		maxX = x2
		maxY = y2
	else
		minY = y2
		maxX = x1
		maxY = y1
	end
	xDiff = maxX - minX 
	yDiff = maxY - minY
	if xDiff > math.abs(yDiff) then
		local y1 = minY
		local dy = yDiff / xDiff
		for x=minX,maxX do
			dPI(x,math.floor(y+0.5))
			y = y+dy
		end
	else
		local x = minX
		local dx = xDiff/yDiff
		if maxY >= minY then
			for y=minY,maxY do	
				dPI(math.floor(tonumber(x)+0.5),y)
				x = x+dx
			end
		else
			for y=minY,maxY,-1 do
				dPI(math.floor(tonumber(x)+0.5),y)
				x = x-dx
			end
		end
	end
end
function drawBox(x1,y1,x2,y2,c)
	if type(x1)~="number" or type(y1)~="number" or
	   type(x2)~="number" or type(y2)~="number" or
	   (c~=nil and type(c)~="number") then
	   error("Expected startX, startY, endX, endY, Color")
	end
	x1 = math.floor(x1)
	y1 = math.floor(y1)
	x2 = math.floor(x2)
	y2 = math.floor(y2)
	if c then
		bc(c)
	end
	if x1==x2 and y1==y2 then
		dPI(x1,y1)
		return
	end
	local minX = math.min(x1,x2)
	if minX==x1 then
		minY = y1
		maxX = x2
		maxY = y2
	else
		minY = y2
		maxX = x1
		maxY = y1
	end
	for x=minX,maxX do
		dPI(x,minY)
		dPI(x,maxY)
	end
	if (maxY - minY) >= 2 then
		for y=(minY+1),(maxY-1) do
			dPI(minX,y)
			dPI(maxX,y)
		end		
	end
end
function drawFilledBox(x1,y1,x2,y2,c)
	if type(x1)~="number" or type(y1)~="number" or
	   type(x2)~="number" or type(y2)~="number" or
	   (c~=nil and type(c)~="number") then
	   error("Expected startX, startY, endX, endY, Color")
	end
	x1 = math.floor(x1)
	y1 = math.floor(y1)
	x2 = math.floor(x2)
	y2 = math.floor(y2)
	if c then
		bc(c)
	end
	if x1==x2 and y1==y2 then
		dPI(x1,y1)
		return
	end
	local minX = math.min(x1,x2)
	if minX==x1 then
		minY = y1
		maxX = x2
		maxY = y2
	else
		minY = y2
		maxX = x1
		maxY = y1
	end
	for x=minX,maxX do 
		for y=minY,maxY do
			dPI(x,y)
		end
	end
end
function image(i,x,y)
	if fs.exists(i) then
		local img = loadImage(i)
		paintutils.drawImage(img,x,y)
	else
		error("Image Does No Exist :"..i)
	end
end
function Cwrite(y,words,Tc,Bc)
	local Tc = Tc or term.getTextColor()
	local cpos = term.getCursorPos()
	local x = math.ceil((w/2)-(#words/2)+1)
	local y = y or cpos[2]
	local Bc = Bc or term.getBackgroundColor()
	bc(Bc)
	tc(Tc)
	pos(x,y)
	write(words)
end
function clsX(y,c,w,s,e)
	local ccolor = term.getBackgroundColor()
	local c = c or ccolor
	local cpos = {term.getCursorPos()}
	local y = y or cpos[2]
	local w = w or " "
	local Start = s or 1
	local End = e or w
	bc(c)
	for i=Start, End do
		pos(i,y)
		write(w)
	end
end
function clsY(x,c,w,s,e)
	local ccolor = term.getBackgroundColor()
	local c = c or ccolor
	local cpos = {term.getCursorPos()}
	local x = x or cpos[1]
	local w = w or " "
	local Start = s or 1
	local End = e or h
	bc(c)
	for i=Start, End do
		pos(x,i)
		write(w)
	end
end
------------------
local conf = getT("os/files/config")
ver = conf["VER"]
function meun(i,x,y)
  conf = A.getT("os/files/config")
  cls()
  image(i,x,y)
  pos(1,1)
  bc(conf["MC"])
  clsL()
  tc(conf["MTC"])
  write(" (start)") 
  pos(52-(2+#ver),1)
  write("V:"..ver)
  pos(1,19)
  clsL()
  write("Made By: SuperKH")
  pos(1,2)
end
function meun1()
  conf = A.getT("os/files/config")
  bc(colors.red)
  tc(colors.white)
  pos(1,2)
  write("+==========+")
  pos(1,3)
  write("| ShutDown |")
  pos(1,4)
  write("|  ReBoot  |")
  pos(1,5)
  write("|  Manage  |")
  pos(1,6)
  write("|  Config  |")
  pos(1,7)
  write("+==========+")
end
function meun2(x,y)
  conf = A.getT("os/files/config")
  local xy = {x,y}
  if y==1 then
    xy[2]=2
  end 
  if y>=19-5 then
    xy[2]=19-5
  end
  if x>=52-12 then
    xy[1]=52-12
  end
  bc(conf["SMC"])
  tc(conf["SMTC"])
  pos(xy[1],xy[2])
  write("+==========+")
  pos(xy[1],xy[2]+1)
  write("| New Icon |")
  pos(xy[1],xy[2]+2)
  write("| Add Icon |")
  pos(xy[1],xy[2]+3)
  write("|   Help   |")
  pos(xy[1],xy[2]+4)
  write("+==========+")
  return xy
end
function meun3(xy)
	conf = A.getT("os/files/config")
	bc(conf["SMC"])
	tc(conf["SMTC"])
	pos(xy[1],xy[4]+1)
	write("+============+")
	pos(xy[1],xy[4]+2)
	write("|  Programs  |")
	pos(xy[1],xy[4]+3)
	write("| Change Img |")
	pos(xy[1],xy[4]+4)
	write("|   Remove   |")
	pos(xy[1],xy[4]+5)
	write("+============+")
end
function meun4(x,y)
	conf = A.getT("os/files/config")
	bc(conf["SMC"])
	tc(conf["SMTC"])
	pos(x,y)
	write("+========+")
	pos(x,y+1)
	write("|  Edit  |")
	pos(x,y+2)
	write("| Remove |")
	pos(x,y+3)
	write("+========+")
end
function meun5()
  conf = A.getT("os/files/config")
  bc(conf["SMC"])
  tc(conf["SMTC"])
  pos(1,2)
  write("+==========+")
  pos(1,3)
  write("| ShutDown |")
  pos(1,4)
  write("|  ReBoot  |")
  pos(1,5)
  write("|   Back   |")
  pos(1,6)
  write("+==========+")
end
function meun6(x,y)
	conf = A.getT("os/files/config")
	bc(conf["SMC"])
	tc(conf["SMTC"])
	if y<=1 then
		y=2
	end
	if y>=wh[2]-3 then
		y=wh[2]-3
	end
	if x>=wh[1]-12 then
		x=wh[1]-12
	end
	pos(x,y)
	write("+===========+")
	pos(x,y+1)
	write("| Add Image |")
	pos(x,y+2)
	write("+===========+")
	return x,y
end
function Error(err)
	local function pString(s)
		s = s .. " "
		local function sString(x)
			local t = {}
			while true do
				local y = string.find(x," ")
				if y == nil then 
					table.insert(t,x)
					return t
				end
				table.insert(t,string.sub(x,1,y))	
				x = string.sub(x,y+1)		
			end
		end
		local t = sString(s)
		local newT = {}
		local size = 0
		local str = ""
		for v,k in ipairs(t) do
			if size+#k<=48 then
				str = str..k
				size = #str
				if v==#t then
					table.insert(newT,str)
				end
			else
				table.insert(newT,str)
				size = 0
				str = ""
				--
				str = str..k
				size = #str
				if v==#t then
					table.insert(newT,str)
				end
			end
		end
		return newT
	end
	tc(colors.white)
	bc(colors.blue)
	cls()
	pos(1,1)
	write("+")
	clsX(1,colors.blue,"-",2,w-1)
	write("+")
	clsY(1,colors.blue,"|",2,h-1)
	clsY(w,colors.blue,"|",2,h-1)
	pos(1,h)
	write("+")
	clsX(h,colors.blue,"-",2,w-1)
	write("+")
	Cwrite(2,"Error:")
	clsX(3,colors.blue,"-",2,w-1)
	local errorT = pString(err)
	y = 5
	for v,k in ipairs(errorT) do
		pos(1,y)
		Cwrite(y,k)
		y=y+1
	end
	pos(2,h-1)
	-----------------------------------------------------------------------
	if not fs.exists("os/files/ErrorLog") then
		local f = fs.open("os/files/ErrorLog","w")
		f.writeLine("---------------------------------------------------")
		f.writeLine("           Thank You For Using SuperOS!            ") 
		f.writeLine("            -------------------------              ")
		f.writeLine("	     Sorry For All The Inconveniencses!         ")
		f.writeLine("   If Errors Continually Accor Please Upload This  ")
		f.writeLine("   File To PasteBin And Then Email Me The Link To  ")
		f.writeLine("'             ~noobykyle@gmail.com                  '")
		f.writeLine("---------------------------------------------------")
		f.close()
	end
	local f = fs.open("os/files/ErrorLog","a")
		f.writeLine(err)
	f.close()
end
function userin(x,y,o)
	image("os/images/input",x,y)
	pos(x+1,y+1)
	bc(colors.white)
	tc(colors.black)
	if o==0 then
		write("os/programs/")
		local input = read()
		input = "os/programs/"..input
		return input
	elseif o==1 then
		write("../icons/")
		local input = read()
		input = "os/images/icons/"..input
		return input
	elseif o==2 then
		write(" Pass:")
		local input = read("*")
		if input == pass then
			return true
		else
			return true -- change to true to disable
		end
	elseif o==3 then
		write("../images/")
		local input = read()
		input = "os/images/"..input
		return input
	end
end
function pastebin(sCode,path)
	local sFile = path
	local sPath = sFile
	if fs.exists( sPath ) then
		fs.delete(sPath)
	end
	--gets the contents from pastebin
	local function get(paste)
		local response = http.get(
			"http://pastebin.com/raw/"..textutils.urlEncode( paste )
		)
		if response then
			local sResponcse = response.readAll()
			response.close()
			return sResponcse
		else
			error(paste)
		end
	end
	local res = get(sCode)
	if res then	
		local file = fs.open( sPath, "w" )
		file.write( res )
		file.close()
	end	
end
function checkupdate()
  pastebin("L2xbGSm5","os/files/update")
  local src = "os/files/update"
  local file = fs.open(src,"r")
  local data = file.readAll()
  file.close()
  print(data)
  print(code)
  if data ~= code then
	return true
  else 
	return false
  end
end
function check2()
	bc(colors.black)
	tc(colors.white)
	cls()
	image("os/images/update",1,1)
	pos(15,6)
	bc(colors.blue)
	write("Do you Wish to Update?")
	pos(17,8)
	bc(colors.green)
	write("YES!")
	pos(30,8)
	bc(colors.red)
	write("NO!")
	pos(1,1)
	while true do
		local arg = { os.pullEvent() }
		if arg[1]=="mouse_click" then
			if arg[2]==1 then
				if arg[3]>=14 and arg[3]<=24 then
					if arg[4]>=8 and arg[4]<=11 then
						return true
					end
				elseif	arg[3]>=26 and arg[3]<=36 then
					if arg[4]>=8 and arg[4]<=11 then
						return false
					end
				end
			end
		elseif arg[1]=="key" then
			if arg[2]==28 then
				return true
			end
		end
	end
end
function help()
	drawFilledBox(2,2,wh[1]-1,wh[2]-1,colors.white)
	local file = io.open("os/files/help",r)
	local data = file.read()
	file.close()
end
